package pages;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.util.List;

public class APITestingPage {
    WebDriver driver;
     public static String PayloadProductDetails = "{\"operationName\":\"ProductSearch\",\"query\":\"query ProductSearch($q: String, $sort: String, $filters: [FilterInputOption!]!, $expansions: [ProductSearchExpansion!], $includeSearchMetadata: Boolean = true, $offset: Int!, $limit: Int!) {\\n  search(\\n    input: {q: $q, sort: $sort, filters: $filters, limit: $limit, offset: $offset, expansions: $expansions, includeSearchMetadata: $includeSearchMetadata}\\n  ) {\\n    __typename\\n    ...PaginatedOutputNodesFragment\\n    ...PaginatedOutputMetadataFragment @include(if: $includeSearchMetadata)\\n  }\\n}\\nfragment PaginatedOutputNodesFragment on PaginatedOutput {\\n  nodes {\\n    __typename\\n    id\\n    color\\n    masterId\\n    variantProduct {\\n      ...mandatoryVariantFields\\n      badges {\\n        id\\n        label\\n        __typename\\n      }\\n      percentageDiscountBadge\\n      salePrice\\n      productPrice {\\n        price\\n        salePrice\\n        promotionPrice\\n        __typename\\n      }\\n      displayOutOfStock {\\n        soldout\\n        comingsoon\\n        backsoon\\n        presale\\n        displayValue\\n        __typename\\n      }\\n      orderable\\n      promotions(page: ProductListingPage) {\\n        id\\n        calloutMessage\\n        __typename\\n      }\\n      __typename\\n    }\\n    masterProduct {\\n      ...mandatoryMasterFields\\n      brand\\n      promotions(page: ProductListingPage) {\\n        id\\n        calloutMessage\\n        __typename\\n      }\\n      score {\\n        rating\\n        amount\\n        __typename\\n      }\\n      __typename\\n    }\\n  }\\n  __typename\\n}\\nfragment PaginatedOutputMetadataFragment on PaginatedOutput {\\n  sortingOptions {\\n    id\\n    label\\n    __typename\\n  }\\n  selectedSort\\n  filteringOptions {\\n    id\\n    label\\n    values {\\n      value\\n      label\\n      hitCount\\n      __typename\\n    }\\n    __typename\\n  }\\n  totalCount\\n  __typename\\n}\\nfragment mandatoryMasterFields on Product {\\n  name\\n  id\\n  orderableColorCount\\n  displayOutOfStock {\\n    soldout\\n    soldoutWithRecommender\\n    comingsoon\\n    backsoon\\n    presale\\n    displayValue\\n    __typename\\n  }\\n  colors {\\n    name\\n    value\\n    image {\\n      href\\n      alt\\n      __typename\\n    }\\n    __typename\\n  }\\n  image {\\n    href\\n    alt\\n    __typename\\n  }\\n  __typename\\n}\\nfragment mandatoryVariantFields on Variant {\\n  id\\n  masterId\\n  variantId\\n  name\\n  price\\n  colorValue\\n  colorName\\n  ean\\n  sizeGroups {\\n    label\\n    description\\n    sizes {\\n      id\\n      label\\n      value\\n      productId\\n      orderable\\n      maxOrderableQuantity\\n      __typename\\n    }\\n    __typename\\n  }\\n  preview\\n  images {\\n    alt\\n    href\\n    __typename\\n  }\\n  __typename\\n}\",\"variables\":{\"filters\":[],\"includeSearchMetadata\":true,\"limit\":24,\"offset\":0,\"q\":\"sports shoes\"}}\n";
     public static String PayloadUserDetails ="{\"operationName\":\"Me\",\"query\":\"query Me($includeAddresses: Boolean = false, $includeOrders: Boolean = false, $includeAmbassadorCards: Boolean = false, $includeSavedCards: Boolean = false, $includeGroups: Boolean = false, $includeNewsletter: Boolean = false, $includeStoreCredit: Boolean = false) {\\n  me {\\n    ...userFields\\n    newsletterSubscription @include(if: $includeNewsletter) {\\n      firstName\\n      lastName\\n      firstNamePronunciation\\n      lastNamePronunciation\\n      email\\n      gender\\n      memberId\\n      dob {\\n        day\\n        month\\n        year\\n        __typename\\n      }\\n      emailPreference\\n      shoppingPreference\\n      iframeURL\\n      isConfirmed\\n      __typename\\n    }\\n    addresses @include(if: $includeAddresses) {\\n      ...addressFields\\n      __typename\\n    }\\n    orders(limit: 5) @include(if: $includeOrders) {\\n      nodes {\\n        ...orderPreviewFields\\n        __typename\\n      }\\n      __typename\\n    }\\n    ambassadorCards @include(if: $includeAmbassadorCards) {\\n      ...ambassadorCardFields\\n      __typename\\n    }\\n    savedCards @include(if: $includeSavedCards) {\\n      ...savedCreditCard\\n      __typename\\n    }\\n    storeCredit @include(if: $includeStoreCredit) {\\n      ...storeCreditFields\\n      __typename\\n    }\\n    groups @include(if: $includeGroups)\\n    __typename\\n  }\\n}\\nfragment userFields on User {\\n  id\\n  customerNo\\n  birthday\\n  firstName\\n  lastName\\n  firstNamePronunciation\\n  lastNamePronunciation\\n  email\\n  phoneNumber\\n  gender\\n  birthday\\n  smsContactNumber\\n  __typename\\n}\\nfragment addressFields on Address {\\n  id\\n  firstName\\n  lastName\\n  firstNamePronunciation\\n  lastNamePronunciation\\n  address1\\n  address2\\n  stateCode\\n  city\\n  countryCode\\n  phone\\n  preferred\\n  postalCode\\n  streetNumber\\n  salutation\\n  companyName\\n  __typename\\n}\\nfragment orderPreviewFields on StandardOrder {\\n  orderNo\\n  createdAt\\n  currency\\n  orderStatus {\\n    code\\n    label\\n    __typename\\n  }\\n  estimatedTotal\\n  isReturnable\\n  shipment {\\n    address {\\n      id\\n      firstName\\n      lastName\\n      postalCode\\n      salutation\\n      __typename\\n    }\\n    __typename\\n  }\\n  refundInformation\\n  products {\\n    ... on ProductCartItem {\\n      __typename\\n      id\\n      quantity\\n      inCartPrice\\n      purchasedPrice {\\n        price\\n        promotionPrice\\n        __typename\\n      }\\n      product {\\n        id\\n        name\\n        colorValue\\n        colorName\\n        masterId\\n        images {\\n          href\\n          alt\\n          __typename\\n        }\\n        styleNumber\\n        offline\\n        orderable\\n        __typename\\n      }\\n      personalizationImageURL\\n    }\\n    ... on GiftCardCartItem {\\n      id\\n      imageUrl\\n      amount\\n      recipientEmail\\n      recipientName\\n      senderName\\n      __typename\\n    }\\n    __typename\\n  }\\n  customer {\\n    email\\n    id\\n    __typename\\n  }\\n  __typename\\n}\\nfragment ambassadorCardFields on SavedAmbassadorCard {\\n  id\\n  maskedNumber\\n  name\\n  preferred\\n  __typename\\n}\\nfragment savedCreditCard on SavedCreditCard {\\n  UUID\\n  defaultFlag\\n  creditHolderName\\n  creditCardSeq\\n  creditCardType\\n  creditCardNumber\\n  maskedCreditCardNumber\\n  creditCardExpirationMonth\\n  creditCardExpirationYear\\n  __typename\\n}\\nfragment storeCreditFields on StoreCredit {\\n  amount\\n  __typename\\n}\",\"variables\":{\"includeAddresses\":true,\"includeAmbassadorCards\":true,\"includeGroups\":true,\"includeNewsletter\":true,\"includeOrders\":true,\"includeSavedCards\":false,\"includeStoreCredit\":false}}";
     public By searchProductList = By.xpath("//ul[@id='product-list-items']//child::li");
    public APITestingPage (WebDriver driver) {
        this.driver = driver;
    }

    public List<WebElement> getProductList() {
        List<WebElement> element = driver.findElements(searchProductList);
        for(WebElement items : element){
            String productList = items.getText();
            System.out.println(productList);
        }
        return element;
    }
}
